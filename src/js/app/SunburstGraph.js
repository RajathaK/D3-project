// Generated by CoffeeScript 1.4.0
/*d3.json "data/D3graph.json", (data) ->
	
	#color = d3.scale.category20c()

 	canvas = d3.select(".sunBurst").append("svg").attr("width", 960).attr("height", 700)
				.append("g")
				.attr("transform" , "translate(480,364)")
*/

var arc, color, height, partition, radius, svg, width;

width = 960;

height = 700;

radius = Math.min(width, height) / 2;

color = d3.scale.category20c();

svg = d3.select(".sunBurst").append("svg").attr("width", width).attr("height", height).append("g").attr("transform", "translate(" + width / 2 + "," + height * .52 + ")");

partition = d3.layout.partition().sort(null).size([2 * Math.PI, radius * radius]).value(function(d) {
  return 1;
});

arc = d3.svg.arc().startAngle(function(d) {
  return d.x;
}).endAngle(function(d) {
  return d.x + d.dx;
}).innerRadius(function(d) {
  return Math.sqrt(d.y);
}).outerRadius(function(d) {
  return Math.sqrt(d.y + d.dy);
});

d3.json("BarGraph.json", function(error, root) {
  var path;
  return path = svg.datum(root).selectAll("path").data(partition.nodes).enter().append("path").attr("display", function(d) {
    if (d.depth) {
      return null;
    } else {
      return "none";
    }
  }).attr("d", arc).style("stroke", "#fff").style("fill", function(d) {
    return color((d.children ? d : d.parent).name);
  }).style("fill-rule", "evenodd");
});

d3.selectAll("input").on("change", {
  change: function() {
    var value;
    value = this.value === "count" ? function() {
      return 1;
    } : function(d) {
      return d.size;
    };
    return path.data(partition.value(value).nodes).transition().duration(1500);
  }
  /*stash:(d)->
  	d.x0 = d.x
    	d.dx0 = d.dx
  */

  /*arcTween:(a)->
  	i = d3.interpolate({
  		x: a.x0, 
  		dx: a.dx0
  		}, a)
    	return (t)->
    		b = i(t)
      	a.x0 = b.x
      	a.dx0 = b.dx
      	return arc(b)
  */

});

d3.select(self.frameElement).style("height", height + "px");
